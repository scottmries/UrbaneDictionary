c
liked
c
opinion
c
quit
c
Opinion.find_by_user_id_and_term_id(user_id, term_id)
Opinion.find_by_user_id_and_term_id
options
liked
user_id
term_id
c
options
c
options
c
opinion_params
opinion_params[:term_id]
opinion_params[:term_id] = term_id
term_id
user_id
liked
c
liked
term_id
opinion_params[:user_id].to_i
opinion_params[:user_id]
opinion_params
user_id
opinion_params
opinion
opinion_params
c
user.opinioned_terms
c
user.opinioned_terms
user
c
@user_with_terms[:terms]
@user_with_terms[:user]
@user_with_terms.user[:user]
@user_with_terms.user
@user_with_terms
@user
c
@users_with_terms
c
@users_with_terms
q
@users.first.terms
@users.first
@users
User.includes(:terms)
q
User.each.includes(:terms)
User.includes(:terms)
User.first.terms
User.first
User.includes(:term)
User.includes(:terms)
@users
q
users = User.includes(:terms)
User.first.terms
User.first.includes(:terms)
User.includes(:terms)
User.joins(:terms)
User.first.terms
User.eager_load(:terms)
User.first.terms
User.includes(:terms)
User.all.includes(:terms)
User.includes(:terms)
User.first.terms
@users
exit
User.includes(:terms)
@users.first.terms
@users.first
@users
q
User.first
Term.includes(:user)
@users
q
@users
q
User.methods
User.term
User.terms
User.first
User.first.term
User.includes(:terms)
User.include(:terms)
@users
q
@users
c
exit
@user_with_terms
@user_with_terms[:terms]
@user_with_terms[:user]
@user_with_terms[:user
@user_with_terms
exit
params
term_params
exit
term_params[:video_url]
term_params
params[:id]
params
exit
term_params
params
exit
term_params
q
y
q
exit
PgSearch
quit
c
quit
User.createGuestUser
Api::User
User
user_params
quit
render "/"
sign_out
exit
json.extract! term, :id, :term, :definition, :usage, :user_id, :created_at
term
exit
@terms
exit
User.all
User.find(1)
Term.includes(:user).first
Term.includes(:user)
Terms.includes(:author)
Terms.includes(:user)
User.includes(:terms)
User.all
User.first.term
User.all
@terms.first
@terms
Term.all()
exit
Term.find(params[:id])
params[:id]
term_params[:id]
